; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter, extra scripting
;   Upload options: custom port, speed and extra flags
;   Library options: dependencies, extra library storages
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
description =
    CoreMark benchmark.

[common]
compile_flags = -O2 -funroll-all-loops -finline-limit=600
    -ftree-dominator-opts -fno-if-conversion2
    -fselective-scheduling -fno-code-hoisting
    -fno-common -funroll-loops -finline-functions
    -falign-functions=4 -falign-jumps=4 -falign-loops=4
    -DPERFORMANCE_RUN=1
    -Wl,-u,_printf_float

[env]
platform = nuclei
framework = nuclei-sdk
monitor_speed = 115200
build_unflags = -Os
build_flags = ${common.compile_flags}

[env:nuclei-hbird_eval]
board = hbird_eval
# Changed to use ilm download mode
board_build.download = ilm
build_flags = ${common.compile_flags} -DITERATIONS=500

[env:nuclei-gd32vf103v_rvstar]
board = gd32vf103v_rvstar
build_flags = ${common.compile_flags} -DITERATIONS=5000

[env:nuclei-gd32vf103v_eval]
board = gd32vf103v_eval
build_flags = ${common.compile_flags} -DITERATIONS=5000

[env:nuclei-gd32vf103c_longan_nano]
board = gd32vf103c_longan_nano
build_flags = ${common.compile_flags} -DITERATIONS=5000

[env:nuclei-gd32vf103c_longan_nano_lite]
board = gd32vf103c_longan_nano
board_build.variant = lite
build_flags = ${common.compile_flags} -DITERATIONS=5000