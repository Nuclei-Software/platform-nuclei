; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter, extra scripting
;   Upload options: custom port, speed and extra flags
;   Library options: dependencies, extra library storages
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
description =
    example to show how to use NMSIS DSP Library.

[env]
platform = nuclei
framework = nuclei-sdk
monitor_speed = 115200

[env:nuclei-nuclei_fpga_eval]
board = nuclei_fpga_eval
board_build.download = ilm
board_build.core = n307fd
# If you change the board_build.core to different core
# then you need to change this build_flags to include different library
# If the core didn't support dsp feature, please remove the `p` extension
# e.g. If you change board_build.core to n205, then
# build_flags = -lnmsis_dsp_rv32imac
build_flags = -lnmsis_dsp_rv32imafdcp

[env:nuclei-gd32vw553h_eval]
board = gd32vw553h_eval
# Changed to use sram download mode
board_build.download = sram
build_flags = -lnmsis_dsp_rv32imafdc_zba_zbb_zbc_zbs_xxldspn1x

[env:nuclei-gd32vf103v_rvstar]
board = gd32vf103v_rvstar
# This SoC core don't support dsp feature,
# So we use NMSIS-DSP library with DSP disabled
build_flags = -lnmsis_dsp_rv32imac

[env:nuclei-gd32vf103v_eval]
board = gd32vf103v_eval
# This SoC core don't support dsp feature,
# So we use NMSIS-DSP library with DSP disabled
build_flags = -lnmsis_dsp_rv32imac

[env:nuclei-gd32vf103c_longan_nano]
board = gd32vf103c_longan_nano
# This SoC core don't support dsp feature,
# So we use NMSIS-DSP library with DSP disabled
build_flags = -lnmsis_dsp_rv32imac

[env:nuclei-gd32vf103c_longan_nano_lite]
board = gd32vf103c_longan_nano
board_build.variant = lite
# This SoC core don't support dsp feature,
# So we use NMSIS-DSP library with DSP disabled
build_flags = -lnmsis_dsp_rv32imac